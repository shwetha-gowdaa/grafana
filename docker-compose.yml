version: '3.8'

services:
  # Frontend service
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    networks:
      - grafana_app-network

  # Backend service
  backend:
    build: ./backend
    ports:
      - "5000:5000"
    networks:
      - grafana_app-network
    depends_on:
      - db

  # Database service (PostgreSQL)
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - grafana_app-network

  # cAdvisor to collect Docker container metrics
  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - grafana_app-network

  # Prometheus to scrape metrics
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor
      - node-exporter
      - pushgateway
      - postgres_exporter
    networks:
      - grafana_app-network

  # Grafana to visualize metrics
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
      - loki
    networks:
      - grafana_app-network

  # Pushgateway to collect custom metrics
  pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    restart: always
    ports:
      - "9091:9091"
    networks:
      - grafana_app-network

  # Node Exporter to collect host metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - grafana_app-network

  # PostgreSQL Exporter to expose PostgreSQL metrics
  postgres_exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://user:password@db:5432/mydb?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - grafana_app-network
    depends_on:
      - db

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yaml:ro
      - ./loki-data:/loki
      - ./loki-rules:/loki/rules # Ensure the rules directory is properly mounted
    networks:
      - grafana_app-network
 
 #Promtail for log scraping
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: always
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yml:ro
      - ./logs:/var/log/nginx
    command:
      - -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - grafana_app-network

networks:
  grafana_app-network:
    driver: bridge
